def get_path(F,G):
    n=len(F)
    m=len(F[0])

    i=n-1
    j=m-1

    R=[]

    while i>0 and j>0:
        R.append((i,j))
        if F[i][j]==F[i-1][j]+G[i][j]:
            i-=1
        else:
            j-=1
    while i>0:
        R.append((i,j))
        i-=1
    while j>0:
        R.append((i,j))
        j-=1
    R.append((0,0))
    return R[::-1]


def walk(G):
    n=len(G)
    m=len(G[0])
    F=[[float('inf')for _ in range(m)]for _ in range(n)]

    F[0][0]=G[0][0]
    for i in range(1,m):
        F[0][i]=F[0][i-1]+G[0][i]
    for i in range(1,n):
        F[i][0]=F[i-1][0]+G[i][0]
    
    for i in range(1,n):

        for j in range(1,m):
            F[i][j]=min(F[i][j],F[i-1][j]+G[i][j],F[i][j-1]+G[i][j])
    return F[n-1][m-1],get_path(F,G)

G=[[3, 4, 5, 2, 1], [7, 2, 13, 7, 8], [3, 1, 4, 1, 5], [2, 8, 11, 1, 3], [3, 5, 1, 3, 2]]
# G=[[1, 8, 11, 4, 2, 3, 2, 10, 18], 
# [13, 11, 19, 19, 2, 11, 13, 16, 12], 
# [19, 7, 2, 5, 14, 10, 14, 8, 8], [13, 1, 8, 11, 10, 16, 11, 12, 3], 
# [6, 18, 5, 3, 1, 19, 15, 15, 19], [2, 19, 10, 16, 3, 9, 20, 12, 14],
#  [1, 7, 12, 18, 5, 8, 1, 9, 9], [4, 18, 14, 1, 12, 12, 14, 14, 19], 
#  [3, 16, 7, 7, 19, 8, 8, 8, 18], [12, 20, 16, 17, 10, 12, 10, 13, 18], 
#  [7, 2, 14, 14, 4, 19, 7, 6, 12], [16, 4, 6, 17, 17, 7, 16, 15, 2], 
#  [14, 8, 12, 9, 6, 2, 3, 12, 4], [5, 18, 2, 15, 14, 2, 2, 16, 3]]

print(walk(G))